<% layout("layouts/boilerplate") %> 

<style>
    .listings-container {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        min-height: 100vh;
        padding: 20px 0;
    }

    .page-header {
        text-align: center;
        margin-bottom: 30px;
        color: #2c3e50;
    }

    .page-header h1 {
        font-size: 2.5rem;
        font-weight: 700;
        background: linear-gradient(45deg, #667eea, #764ba2);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        margin-bottom: 10px;
    }

    .page-header p {
        font-size: 1.1rem;
        color: #7f8c8d;
        margin: 0;
    }

    .search-section {
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        padding: 25px;
        margin-bottom: 30px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    }

    .search-container {
        display: flex;
        gap: 15px;
        align-items: center;
        margin-bottom: 20px;
    }

    .search-input {
        flex: 1;
        padding: 15px 20px;
        border: 2px solid #e1e8ed;
        border-radius: 12px;
        font-size: 16px;
        transition: all 0.3s ease;
        background: rgba(255, 255, 255, 0.9);
    }

    .search-input:focus {
        outline: none;
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        transform: translateY(-2px);
    }

    .search-btn {
        padding: 15px 25px;
        background: linear-gradient(45deg, #667eea, #764ba2);
        color: white;
        border: none;
        border-radius: 12px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 1px;
    }

    .search-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
    }

    .clear-btn {
        padding: 15px 25px;
        background: linear-gradient(45deg, #95a5a6, #7f8c8d);
        color: white;
        border: none;
        border-radius: 12px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 1px;
    }

    .clear-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(149, 165, 166, 0.3);
    }

    .filters-section {
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        padding: 25px;
        margin-bottom: 30px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        /* 🚀 Enhanced as the primary filter system */
        border: 2px solid rgba(102, 126, 234, 0.1);
        position: relative;
        overflow: hidden;
    }

    .filters-section::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: linear-gradient(90deg, #667eea, #764ba2, #667eea);
        background-size: 200% 100%;
        animation: shimmer 3s infinite;
    }

    #filters {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        gap: 15px;
    }

    .filter {
        text-align: center;
        padding: 12px 20px;
        background: linear-gradient(45deg, #667eea, #764ba2);
        color: white;
        border-radius: 25px;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        min-width: 120px;
        min-height: 60px;
        border: 2px solid transparent;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 8px;
        position: relative;
        overflow: hidden;
    }

    .filter:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
    }

    .filter.active {
        background: linear-gradient(45deg, #2ecc71, #27ae60);
        border-color: #27ae60;
        box-shadow: 0 8px 25px rgba(46, 204, 113, 0.4);
    }

    .filter i {
        font-size: 1.4rem;
        margin: 0;
        display: block;
        line-height: 1;
        flex-shrink: 0;
    }

    .filter p {
        font-size: 0.85rem;
        margin: 0;
        font-weight: 600;
        line-height: 1.2;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 100%;
    }

    /* Specific adjustments for different button sizes */
    .filter[data-category="All"] {
        min-width: 80px;
        padding: 12px 15px;
    }

    .filter[data-category="All"] i {
        font-size: 1.2rem;
    }

    .filter[data-category="All"] p {
        font-size: 0.9rem;
    }

    .filter[data-category="Iconic Cities"] {
        min-width: 140px;
    }

    .filter[data-category="Arctic Pools"] {
        min-width: 140px;
    }

    .tax-toggle {
        background: rgba(255, 255, 255, 0.8);
        border: 2px solid #667eea;
        border-radius: 25px;
        padding: 12px 20px;
        display: flex;
        align-items: center;
        margin-left: auto;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    .form-check-input:checked {
        background-color: #667eea;
        border-color: #667eea;
    }

    .results-info {
        text-align: center;
        margin-bottom: 20px;
        color: #2c3e50;
        font-size: 1.1rem;
        font-weight: 600;
    }

    .no-results {
        text-align: center;
        padding: 60px 20px;
        color: #7f8c8d;
    }

    .no-results h3 {
        font-size: 1.5rem;
        margin-bottom: 10px;
        color: #2c3e50;
    }

    .no-results p {
        font-size: 1.1rem;
        margin-bottom: 20px;
    }

    .no-results .btn {
        padding: 12px 25px;
        background: linear-gradient(45deg, #667eea, #764ba2);
        color: white;
        border: none;
        border-radius: 12px;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .no-results .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        color: white;
    }

    .listings-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 25px;
        padding: 20px 0;
    }

    .listing-card {
        background: white;
        border-radius: 20px;
        overflow: hidden;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        border: none;
        position: relative;
    }

    .listing-card:hover {
        transform: translateY(-8px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    }

    .listing-card .card-img-top {
        height: 250px;
        object-fit: cover;
        width: 100%;
        transition: transform 0.3s ease;
    }

    .listing-card:hover .card-img-top {
        transform: scale(1.05);
    }

    .card-img-overlay {
        background: linear-gradient(to bottom, transparent 0%, rgba(0, 0, 0, 0.3) 100%);
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .listing-card:hover .card-img-overlay {
        opacity: 1;
    }

    .card-body {
        padding: 20px;
        background: white;
    }

    .card-text {
        margin: 0;
        line-height: 1.6;
    }

    .card-text b {
        color: #2c3e50;
        font-size: 1.1rem;
        font-weight: 700;
        display: block;
        margin-bottom: 8px;
    }

    .price {
        color: #667eea;
        font-size: 1.2rem;
        font-weight: 700;
        margin-top: 10px;
    }

    .tx-info {
        display: none;
        color: #e74c3c;
        font-size: 0.9rem;
        font-weight: 600;
    }

    .listing-link {
        text-decoration: none;
        color: inherit;
        display: block;
    }

    .listing-link:hover {
        text-decoration: none;
        color: inherit;
    }

    .book-now-btn {
        width: 100%;
        padding: 12px 20px;
        background: linear-gradient(45deg, #2ecc71, #27ae60);
        color: white;
        border: none;
        border-radius: 12px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-block;
        text-align: center;
        margin-top: 15px;
        font-size: 14px;
    }

    .book-now-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(46, 204, 113, 0.3);
        color: white;
        text-decoration: none;
    }

    .login-required {
        background: linear-gradient(45deg, #95a5a6, #7f8c8d) !important;
    }

    .login-required:hover {
        box-shadow: 0 8px 25px rgba(149, 165, 166, 0.3) !important;
    }

    /* Booking Modal Styles */
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.7);
        display: none;
        justify-content: center;
        align-items: center;
        z-index: 9999;
        backdrop-filter: blur(5px);
        -webkit-backdrop-filter: blur(5px);
    }

    .booking-modal {
        background: white;
        border-radius: 20px;
        padding: 30px;
        max-width: 500px;
        width: 90%;
        max-height: 90vh;
        overflow-y: auto;
        position: relative;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
        animation: modalSlideIn 0.3s ease-out;
        /* Ensure modal is visible */
        opacity: 1;
        visibility: visible;
        /* Lower z-index than Razorpay */
        z-index: 1000;
    }

    @keyframes modalSlideIn {
        from {
            opacity: 0;
            transform: translateY(-50px) scale(0.9);
        }
        to {
            opacity: 1;
            transform: translateY(0) scale(1);
        }
    }

    /* Ensure modal content is visible */
    .booking-modal * {
        visibility: visible;
        opacity: 1;
    }

    /* Razorpay modal should have higher z-index */
    .razorpay-container {
        z-index: 10000 !important;
    }

    /* Ensure Razorpay modal appears above everything */
    iframe[src*="razorpay"] {
        z-index: 10001 !important;
    }

    /* Global rules for Razorpay modal */
    .razorpay-checkout-frame {
        z-index: 10001 !important;
    }

    /* Ensure Razorpay modal container is always on top */
    div[class*="razorpay"] {
        z-index: 10001 !important;
    }

    /* Remove any backdrop filters that might interfere with Razorpay */
    .modal-overlay.razorpay-active {
        backdrop-filter: none !important;
        -webkit-backdrop-filter: none !important;
    }

    /* Ensure body scroll is restored when Razorpay opens */
    body.razorpay-open {
        overflow: auto !important;
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 2px solid #f1f2f6;
    }

    .modal-title {
        font-size: 1.5rem;
        font-weight: 700;
        color: #2c3e50;
        margin: 0;
    }

    .close-modal {
        background: none;
        border: none;
        font-size: 1.5rem;
        cursor: pointer;
        color: #7f8c8d;
        transition: color 0.3s ease;
        padding: 5px;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .close-modal:hover {
        color: #e74c3c;
        background: rgba(231, 76, 60, 0.1);
    }

    .listing-preview {
        display: flex;
        gap: 15px;
        margin-bottom: 20px;
        padding: 15px;
        background: #f8f9fa;
        border-radius: 12px;
        border: 1px solid #e9ecef;
    }

    .listing-image {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 8px;
        flex-shrink: 0;
    }

    .listing-details {
        flex: 1;
    }

    .listing-details h4 {
        margin: 0 0 5px 0;
        color: #2c3e50;
        font-size: 1.1rem;
        font-weight: 600;
    }

    .listing-details p {
        margin: 0;
        color: #7f8c8d;
        font-size: 0.9rem;
    }

    .booking-form {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .form-group {
        display: flex;
        flex-direction: column;
        gap: 5px;
    }

    .form-label {
        font-weight: 600;
        color: #2c3e50;
        font-size: 0.9rem;
    }

    .form-input {
        padding: 12px 15px;
        border: 2px solid #e1e8ed;
        border-radius: 8px;
        font-size: 14px;
        transition: all 0.3s ease;
        background: white;
    }

    .form-input:focus {
        outline: none;
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    }

    .date-inputs {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 10px;
    }

    .price-summary {
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        padding: 20px;
        border-radius: 12px;
        margin: 20px 0;
    }

    .price-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 8px;
    }

    .price-row.total {
        border-top: 1px solid rgba(255, 255, 255, 0.3);
        padding-top: 10px;
        margin-top: 10px;
        font-weight: 700;
        font-size: 1.1rem;
    }

    .proceed-btn {
        width: 100%;
        padding: 15px;
        background: linear-gradient(45deg, #2ecc71, #27ae60);
        color: white;
        border: none;
        border-radius: 12px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        font-size: 16px;
        text-transform: uppercase;
        letter-spacing: 1px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }

    .proceed-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(46, 204, 113, 0.3);
    }

    .proceed-btn:disabled {
        background: #95a5a6;
        cursor: not-allowed;
        transform: none;
        box-shadow: none;
    }

    .loading {
        display: none;
        text-align: center;
        padding: 20px;
    }

    .spinner {
        border: 3px solid #f3f3f3;
        border-top: 3px solid #2ecc71;
        border-radius: 50%;
        width: 30px;
        height: 30px;
        animation: spin 1s linear infinite;
        margin: 0 auto 10px;
    }

    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    /* Success Modal */
    .success-modal {
        text-align: center;
        padding: 40px 20px;
    }

    .success-icon {
        font-size: 4rem;
        color: #2ecc71;
        margin-bottom: 20px;
    }

    .success-title {
        font-size: 1.5rem;
        font-weight: 700;
        color: #2c3e50;
        margin-bottom: 10px;
    }

    .success-message {
        color: #7f8c8d;
        margin-bottom: 20px;
    }

    .booking-id {
        background: #f8f9fa;
        padding: 10px;
        border-radius: 8px;
        font-family: monospace;
        font-weight: 600;
        color: #2c3e50;
        margin: 10px 0;
    }

    @media (max-width: 768px) {
        .search-container {
            flex-direction: column;
        }
        
        .listings-grid {
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 15px;
        }
        
        .filter {
            min-width: 80px;
            padding: 10px 15px;
        }
        
        .tax-toggle {
            margin-left: 0;
            margin-top: 15px;
        }
    }
</style>

<div class="listings-container">
    <div class="container">
        <div class="page-header">
            <h1>🌍 Discover Amazing Places</h1>
            <p>Find your perfect adventure destination</p>
        </div>

        <div class="search-section">
            <form action="/listings" method="GET" id="searchForm">
                <div class="search-container">
                    <input 
                        type="text" 
                        name="search" 
                        class="search-input" 
                        placeholder="Search by title, location, or description..."
                        value="<%= currentSearch %>"
                    >
                    <button type="submit" class="search-btn">
                        <i class="fa-solid fa-search"></i> Search
                    </button>
                    <% if (currentSearch || currentCategory !== 'all') { %>
                        <a href="/listings" class="clear-btn">
                            <i class="fa-solid fa-times"></i> Clear
                        </a>
                    <% } %>
                </div>
                
                <!-- Hidden input to maintain category when searching -->
                <input type="hidden" name="category" value="<%= currentCategory %>" id="categoryInput">
            </form>
        </div>

        <div class="filters-section">
            <div id="filters">
                <div class="filter <%= currentCategory === 'all' ? 'active' : '' %>" data-category="all">
                    <i class="fa-solid fa-globe"></i>
                    <p>All</p>
                </div>
                <div class="filter <%= currentCategory === 'Trending' ? 'active' : '' %>" data-category="Trending">
                    <i class="fa-solid fa-fire"></i>
                    <p>Trending</p>
                </div>
                <div class="filter <%= currentCategory === 'Rooms' ? 'active' : '' %>" data-category="Rooms">
                    <i class="fa-solid fa-bed"></i>
                    <p>Rooms</p>
                </div>
                <div class="filter <%= currentCategory === 'Iconic Cities' ? 'active' : '' %>" data-category="Iconic Cities">
                    <i class="fa-solid fa-mountain-city"></i>
                    <p>Iconic Cities</p>
                </div>
                <div class="filter <%= currentCategory === 'Mountains' ? 'active' : '' %>" data-category="Mountains">
                    <i class="fa-solid fa-mountain"></i>
                    <p>Mountains</p>
                </div>
                <div class="filter <%= currentCategory === 'Castles' ? 'active' : '' %>" data-category="Castles">
                    <i class="fa-solid fa-chess-rook"></i>
                    <p>Castles</p>
                </div>
                <div class="filter <%= currentCategory === 'Arctic Pools' ? 'active' : '' %>" data-category="Arctic Pools">
                    <i class="fa-solid fa-person-swimming"></i>
                    <p>Arctic Pools</p>
                </div>
                <div class="filter <%= currentCategory === 'Camping' ? 'active' : '' %>" data-category="Camping">
                    <i class="fa-solid fa-campground"></i>
                    <p>Camping</p>
                </div>
                <div class="filter <%= currentCategory === 'Farms' ? 'active' : '' %>" data-category="Farms">
                    <i class="fa-solid fa-cow"></i>
                    <p>Farms</p>
                </div>
                <div class="filter <%= currentCategory === 'Arctic' ? 'active' : '' %>" data-category="Arctic">
                    <i class="fa-solid fa-snowflake"></i>
                    <p>Arctic</p>
                </div>
                <div class="filter <%= currentCategory === 'Domes' ? 'active' : '' %>" data-category="Domes">
                    <i class="fa-solid fa-igloo"></i>
                    <p>Domes</p>
                </div>
                <div class="filter <%= currentCategory === 'Boats' ? 'active' : '' %>" data-category="Boats">
                    <i class="fa-solid fa-ship"></i>
                    <p>Boats</p>
                </div>

                <div class="tax-toggle">
                    <div class="form-check-reverse form-switch">
                        <input class="form-check-input" type="checkbox" role="switch" id="switchCheckDefault">
                        <label class="form-check-label" for="switchCheckDefault">Display total after taxes</label>
                    </div>
                </div>
            </div>
        </div>

        <% if (currentSearch || currentCategory !== 'all') { %>
            <div class="results-info">
                <% if (currentSearch && currentCategory !== 'all') { %>
                    Showing results for "<%= currentSearch %>" in <%= currentCategory %> category
                <% } else if (currentSearch) { %>
                    Showing results for "<%= currentSearch %>"
                <% } else if (currentCategory !== 'all') { %>
                    Showing <%= currentCategory %> listings
                <% } %>
                (<%= allListings.length %> found)
            </div>
        <% } %>

        <% if (allListings.length === 0) { %>
            <div class="no-results">
                <h3>No listings found</h3>
                <p>
                    <% if (currentSearch && currentCategory !== 'all') { %>
                        We couldn't find any listings matching "<%= currentSearch %>" in the <%= currentCategory %> category.
                    <% } else if (currentSearch) { %>
                        We couldn't find any listings matching "<%= currentSearch %>".
                    <% } else if (currentCategory !== 'all') { %>
                        No listings found in the <%= currentCategory %> category.
                    <% } else { %>
                        No listings available at the moment.
                    <% } %>
                </p>
                <a href="/listings" class="btn">View All Listings</a>
            </div>
        <% } else { %>
            <div class="listings-grid">
                <% for(let listing of allListings){ %>
                    <div class="listing-card">
                        <a href="/listings/<%= listing._id %>" class="listing-link">
                            <img class="card-img-top lazy-image" 
                                 data-src="<%= listing.image?.url || 'https://via.placeholder.com/400x250' %>" 
                                 src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='400' height='250'%3E%3Crect width='100%25' height='100%25' fill='%23f8f9fa'/%3E%3Ctext x='50%25' y='50%25' text-anchor='middle' dy='0.3em' fill='%23dee2e6'%3ELoading...%3C/text%3E%3C/svg%3E"
                                 alt="<%= listing.title %>"
                                 loading="lazy"/>
                            <div class="card-img-overlay"></div>
                        </a>
                        <div class="card-body">
                            <a href="/listings/<%= listing._id %>" class="listing-link">
                                <p class="card-text">
                                    <b><%= listing.title %></b>
                                    <span class="price">₹<%= listing.price ? listing.price.toLocaleString("en-IN") : "N/A" %> /night</span>
                                    <span class="tx-info">+18% GST</span>
                                </p>
                            </a>
                            <% if (currUser) { %>
                                <button class="book-now-btn" onclick="openBookingModal('<%= listing._id %>', '<%= listing.title %>', <%= listing.price %>, '<%= listing.image?.url || 'https://via.placeholder.com/400x250' %>')">
                                    <i class="fa-solid fa-calendar-check"></i> Book Now
                                </button>
                            <% } else { %>
                                <a href="/login" class="book-now-btn login-required">
                                    <i class="fa-solid fa-sign-in-alt"></i> Login to Book
                                </a>
                            <% } %>
                        </div>
                    </div>
                <% } %>
            </div>
        <% } %>
    </div>
</div>

<!-- Booking Modal -->
<div class="modal-overlay" id="bookingModal">
    <div class="booking-modal">
        <div class="modal-header">
            <h3 class="modal-title">Book Your Stay</h3>
            <button class="close-modal" onclick="closeBookingModal()">&times;</button>
        </div>
        
        <div class="listing-preview">
            <img class="listing-image" id="modalListingImage" src="" alt="Listing">
            <div class="listing-details">
                <h4 id="modalListingTitle"></h4>
                <p id="modalListingPrice"></p>
            </div>
        </div>

        <form class="booking-form" id="bookingForm">
            <input type="hidden" id="listingId" name="listingId">
            <input type="hidden" id="pricePerNight" name="pricePerNight">
            
            <div class="date-inputs">
                <div class="form-group">
                    <label class="form-label" for="checkIn">Check-in Date</label>
                    <input type="date" id="checkIn" name="checkIn" class="form-input" required>
                </div>
                <div class="form-group">
                    <label class="form-label" for="checkOut">Check-out Date</label>
                    <input type="date" id="checkOut" name="checkOut" class="form-input" required>
                </div>
            </div>

            <div class="form-group">
                <label class="form-label" for="guestCount">Number of Guests</label>
                <select id="guestCount" name="guestCount" class="form-input" required>
                    <option value="">Select guests</option>
                    <option value="1">1 Guest</option>
                    <option value="2">2 Guests</option>
                    <option value="3">3 Guests</option>
                    <option value="4">4 Guests</option>
                    <option value="5">5 Guests</option>
                    <option value="6">6+ Guests</option>
                </select>
            </div>

            <div class="form-group">
                <label class="form-label" for="specialRequests">Special Requests (Optional)</label>
                <textarea id="specialRequests" name="specialRequests" class="form-input" rows="3" placeholder="Any special requests or preferences..."></textarea>
            </div>

            <div class="price-summary" id="priceSummary" style="display: none;">
                <div class="price-row">
                    <span>Price per night:</span>
                    <span id="displayPricePerNight">₹0</span>
                </div>
                <div class="price-row">
                    <span>Number of nights:</span>
                    <span id="displayNights">0</span>
                </div>
                <div class="price-row">
                    <span>Subtotal:</span>
                    <span id="displaySubtotal">₹0</span>
                </div>
                <div class="price-row">
                    <span>GST (18%):</span>
                    <span id="displayGST">₹0</span>
                </div>
                <div class="price-row total">
                    <span>Total Amount:</span>
                    <span id="displayTotal">₹0</span>
                </div>
            </div>

            <button type="submit" class="proceed-btn" id="proceedBtn">
                <span id="proceedText">Proceed to Payment</span>
                <div class="loading" id="loadingSpinner">
                    <div class="spinner"></div>
                    <p>Processing...</p>
                </div>
            </button>
        </form>
    </div>
</div>

<!-- Success Modal -->
<div class="modal-overlay" id="successModal">
    <div class="booking-modal">
        <div class="success-modal">
            <div class="success-icon">✅</div>
            <h3 class="success-title">Booking Confirmed!</h3>
            <p class="success-message">Your booking has been successfully confirmed. You will receive a confirmation email shortly.</p>
            <div class="booking-id">
                Booking ID: <span id="bookingId"></span>
            </div>
            <div class="booking-id">
                Payment ID: <span id="paymentId"></span>
            </div>
            <button class="proceed-btn" onclick="closeSuccessModal()">Close</button>
        </div>
    </div>
</div>

<script>
    // Category filter functionality
    document.addEventListener('DOMContentLoaded', function() {
        const filters = document.querySelectorAll('.filter');
        const categoryInput = document.getElementById('categoryInput');
        const searchForm = document.getElementById('searchForm');

        filters.forEach(filter => {
            filter.addEventListener('click', function() {
                const category = this.dataset.category;
                
                // Update active state
                filters.forEach(f => f.classList.remove('active'));
                this.classList.add('active');
                
                // Update hidden input
                categoryInput.value = category;
                
                // Submit form to filter results
                searchForm.submit();
            });
        });

        // Tax toggle functionality
        let taxSwitch = document.getElementById("switchCheckDefault");
        taxSwitch.addEventListener("click", () => {
            let taxInfo = document.getElementsByClassName("tx-info");
            for (let info of taxInfo) {
                info.style.display = (info.style.display !== "inline") ? "inline" : "none";
            }
        });

        // Real-time search (optional enhancement)
        const searchInput = document.querySelector('.search-input');
        let searchTimeout;

        searchInput.addEventListener('input', function() {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(() => {
                // Only auto-submit if there's a significant delay (debouncing)
                if (this.value.length >= 3 || this.value.length === 0) {
                    searchForm.submit();
                }
            }, 500);
        });
    });

    // Booking Modal Functions
    function openBookingModal(listingId, title, price, imageUrl) {
        console.log('Opening booking modal for:', { listingId, title, price, imageUrl });
        
        try {
            // Validate inputs
            if (!listingId || !title || !price || !imageUrl) {
                console.error('Missing required parameters for booking modal');
                alert('Error: Missing booking information');
                return;
            }
            
            // Set form values
            document.getElementById('listingId').value = listingId;
            document.getElementById('pricePerNight').value = price;
            document.getElementById('modalListingTitle').textContent = title;
            document.getElementById('modalListingPrice').textContent = `₹${parseFloat(price).toLocaleString('en-IN')} per night`;
            document.getElementById('modalListingImage').src = imageUrl;
            
            // Set minimum dates
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('checkIn').min = today;
            document.getElementById('checkOut').min = today;
            
            // Reset form
            document.getElementById('bookingForm').reset();
            document.getElementById('priceSummary').style.display = 'none';
            
            // Show modal
            const modal = document.getElementById('bookingModal');
            modal.style.display = 'flex';
            modal.style.opacity = '1';
            modal.style.visibility = 'visible';
            document.body.style.overflow = 'hidden';
            
            console.log('Booking modal opened successfully');
            
            // Focus on first input
            setTimeout(() => {
                document.getElementById('checkIn').focus();
            }, 100);
            
        } catch (error) {
            console.error('Error opening booking modal:', error);
            alert('Error opening booking form. Please try again.');
        }
    }

    function closeBookingModal() {
        console.log('Closing booking modal');
        try {
            const modal = document.getElementById('bookingModal');
            if (modal) {
                modal.style.display = 'none';
                modal.style.opacity = '0';
                modal.style.visibility = 'hidden';
                modal.style.pointerEvents = 'none';
            }
            document.body.style.overflow = 'auto';
            document.getElementById('bookingForm').reset();
            document.getElementById('priceSummary').style.display = 'none';
            
            // Reset button state
            const proceedBtn = document.getElementById('proceedBtn');
            const proceedText = document.getElementById('proceedText');
            const loadingSpinner = document.getElementById('loadingSpinner');
            
            if (proceedBtn) proceedBtn.disabled = false;
            if (proceedText) proceedText.style.display = 'inline';
            if (loadingSpinner) loadingSpinner.style.display = 'none';
            
            console.log('Booking modal closed successfully');
        } catch (error) {
            console.error('Error closing booking modal:', error);
        }
    }

    // Function to ensure modal is fully closed
    function ensureModalClosed() {
        const modal = document.getElementById('bookingModal');
        if (modal && modal.style.display !== 'none') {
            closeBookingModal();
        }
    }

    function closeSuccessModal() {
        console.log('Closing success modal');
        try {
            const modal = document.getElementById('successModal');
            modal.style.display = 'none';
            modal.style.opacity = '0';
            modal.style.visibility = 'hidden';
            document.body.style.overflow = 'auto';
            closeBookingModal();
        } catch (error) {
            console.error('Error closing success modal:', error);
        }
    }

    // Calculate price when dates change
    document.getElementById('checkIn').addEventListener('change', calculatePrice);
    document.getElementById('checkOut').addEventListener('change', calculatePrice);

    function calculatePrice() {
        const checkIn = document.getElementById('checkIn').value;
        const checkOut = document.getElementById('checkOut').value;
        const pricePerNight = parseFloat(document.getElementById('pricePerNight').value);

        if (checkIn && checkOut && pricePerNight) {
            const checkInDate = new Date(checkIn);
            const checkOutDate = new Date(checkOut);
            const nights = Math.ceil((checkOutDate - checkInDate) / (1000 * 60 * 60 * 24));

            if (nights > 0) {
                const subtotal = pricePerNight * nights;
                const gst = subtotal * 0.18;
                const total = subtotal + gst;

                document.getElementById('displayPricePerNight').textContent = `₹${pricePerNight.toLocaleString('en-IN')}`;
                document.getElementById('displayNights').textContent = nights;
                document.getElementById('displaySubtotal').textContent = `₹${subtotal.toLocaleString('en-IN')}`;
                document.getElementById('displayGST').textContent = `₹${gst.toLocaleString('en-IN')}`;
                document.getElementById('displayTotal').textContent = `₹${total.toLocaleString('en-IN')}`;
                
                document.getElementById('priceSummary').style.display = 'block';
            } else {
                document.getElementById('priceSummary').style.display = 'none';
            }
        }
    }

    // Handle form submission
    document.getElementById('bookingForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        console.log('Form submitted, starting payment process...');
        
        const formData = new FormData(this);
        const bookingData = {
            listingId: formData.get('listingId'),
            checkIn: formData.get('checkIn'),
            checkOut: formData.get('checkOut'),
            guestCount: formData.get('guestCount'),
            specialRequests: formData.get('specialRequests')
        };

        console.log('Booking data:', bookingData);

        // Validate required fields
        if (!bookingData.checkIn || !bookingData.checkOut || !bookingData.guestCount) {
            alert('Please fill in all required fields');
            return;
        }

        // Show loading
        document.getElementById('proceedText').style.display = 'none';
        document.getElementById('loadingSpinner').style.display = 'block';
        document.getElementById('proceedBtn').disabled = true;

        try {
            console.log('Creating order with data:', bookingData);
            
            // Create order
            const response = await fetch('/api/create-order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(bookingData)
            });

            console.log('Response status:', response.status);
            const result = await response.json();
            console.log('Order creation result:', result);

            if (result.success) {
                // Check if Razorpay is loaded
                if (typeof Razorpay === 'undefined') {
                    console.error('Razorpay not loaded!');
                    alert('Payment gateway not loaded. Please refresh the page and try again.');
                    return;
                }

                console.log('Razorpay is loaded, initializing payment...');

                // Close booking modal BEFORE opening Razorpay to prevent z-index conflicts
                ensureModalClosed();

                // Small delay to ensure modal is fully closed
                setTimeout(() => {
                    // Initialize Razorpay
                    const options = {
                        key: result.key_id,
                        amount: result.order.amount,
                        currency: result.order.currency,
                        name: 'WanderLust',
                        description: `Booking for ${document.getElementById('modalListingTitle').textContent}`,
                        order_id: result.order.id,
                        handler: async function(response) {
                            console.log('Payment response:', response);
                            
                            try {
                                // Verify payment
                                const verifyResponse = await fetch('/api/verify-payment', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({
                                        razorpay_order_id: response.razorpay_order_id,
                                        razorpay_payment_id: response.razorpay_payment_id,
                                        razorpay_signature: response.razorpay_signature
                                    })
                                });

                                const verifyResult = await verifyResponse.json();
                                console.log('Verification result:', verifyResult);

                                if (verifyResult.success) {
                                    // Show success modal
                                    document.getElementById('bookingId').textContent = result.booking._id;
                                    document.getElementById('paymentId').textContent = response.razorpay_payment_id;
                                    document.getElementById('successModal').style.display = 'flex';
                                } else {
                                    alert('Payment verification failed. Please contact support.');
                                }
                            } catch (error) {
                                console.error('Verification error:', error);
                                alert('Payment verification failed. Please contact support.');
                            }
                        },
                        prefill: {
                            name: '<%= currUser ? currUser.username : "" %>',
                            email: '<%= currUser ? currUser.email : "" %>',
                        },
                        theme: {
                            color: '#2ecc71'
                        },
                        modal: {
                            ondismiss: function() {
                                console.log('Payment modal dismissed');
                                // Reset button state when payment modal is dismissed
                                document.getElementById('proceedText').style.display = 'inline';
                                document.getElementById('loadingSpinner').style.display = 'none';
                                document.getElementById('proceedBtn').disabled = false;
                                
                                // Clean up any remaining modal states
                                document.body.classList.remove('razorpay-open');
                                const modalOverlays = document.querySelectorAll('.modal-overlay');
                                modalOverlays.forEach(overlay => {
                                    overlay.classList.remove('razorpay-active');
                                });
                            }
                        }
                    };

                    console.log('Razorpay options:', options);
                    
                    // Add class to body to indicate Razorpay is opening
                    document.body.classList.add('razorpay-open');
                    
                    const rzp = new Razorpay(options);
                    rzp.open();
                }, 150); // Increased delay to ensure modal is fully closed

            } else {
                console.error('Order creation failed:', result.message);
                alert('Error creating order: ' + result.message);
            }

        } catch (error) {
            console.error('Error:', error);
            alert('An error occurred. Please try again.');
        } finally {
            // Hide loading
            document.getElementById('proceedText').style.display = 'inline';
            document.getElementById('loadingSpinner').style.display = 'none';
            document.getElementById('proceedBtn').disabled = false;
        }
    });

    // Close modal when clicking outside
    document.getElementById('bookingModal').addEventListener('click', function(e) {
        if (e.target === this) {
            closeBookingModal();
        }
    });

    document.getElementById('successModal').addEventListener('click', function(e) {
        if (e.target === this) {
            closeSuccessModal();
        }
    });

    // Debug: Check if payment functionality is loaded
    document.addEventListener('DOMContentLoaded', function() {
        console.log('Page loaded, checking payment functionality...');
        console.log('Razorpay loaded:', typeof Razorpay !== 'undefined');
        console.log('User logged in:', <%= currUser ? 'true' : 'false' %>);
        console.log('Booking modal exists:', !!document.getElementById('bookingModal'));
        console.log('Book now buttons found:', document.querySelectorAll('.book-now-btn').length);
    });
</script>