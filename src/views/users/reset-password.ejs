<% layout("/layouts/boilerplate") %>

<style>
    .reset-password-container {
        min-height: 100vh;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px;
    }

    .reset-password-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(20px);
        border-radius: 20px;
        padding: 40px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        max-width: 450px;
        width: 100%;
        position: relative;
        overflow: hidden;
    }

    .reset-password-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #2ecc71, #27ae60, #2ecc71);
        background-size: 200% 100%;
        animation: shimmer 2s infinite;
    }

    @keyframes shimmer {
        0% { background-position: -200% 0; }
        100% { background-position: 200% 0; }
    }

    .card-header {
        text-align: center;
        margin-bottom: 30px;
    }

    .card-header h1 {
        color: #2c3e50;
        font-size: 28px;
        font-weight: 700;
        margin-bottom: 10px;
        background: linear-gradient(45deg, #667eea, #764ba2);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .card-header p {
        color: #7f8c8d;
        font-size: 16px;
        margin: 0;
        line-height: 1.5;
    }

    .form-group {
        margin-bottom: 25px;
        position: relative;
    }

    .form-label {
        display: block;
        color: #2c3e50;
        font-weight: 600;
        margin-bottom: 8px;
        font-size: 14px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .form-control {
        width: 100%;
        padding: 15px 20px;
        border: 2px solid #e1e8ed;
        border-radius: 12px;
        font-size: 16px;
        transition: all 0.3s ease;
        background: rgba(255, 255, 255, 0.9);
    }

    .form-control:focus {
        outline: none;
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        transform: translateY(-2px);
    }



    .password-field {
        position: relative;
    }

    .password-strength {
        margin-top: 10px;
    }

    .strength-bar {
        width: 100%;
        height: 4px;
        background-color: #e1e8ed;
        border-radius: 2px;
        overflow: hidden;
        margin-bottom: 5px;
    }

    .strength-fill {
        height: 100%;
        transition: all 0.3s ease;
        border-radius: 2px;
    }

    .strength-fill.weak {
        background-color: #e74c3c;
        width: 25%;
    }

    .strength-fill.fair {
        background-color: #f39c12;
        width: 50%;
    }

    .strength-fill.good {
        background-color: #f1c40f;
        width: 75%;
    }

    .strength-fill.strong {
        background-color: #27ae60;
        width: 100%;
    }

    .strength-text {
        font-size: 11px;
        font-weight: 600;
    }

    .strength-text.weak {
        color: #e74c3c;
    }

    .strength-text.fair {
        color: #f39c12;
    }

    .strength-text.good {
        color: #f1c40f;
    }

    .strength-text.strong {
        color: #27ae60;
    }

    .requirement {
        margin: 2px 0;
        transition: color 0.3s ease;
    }

    .requirement.met {
        color: #27ae60;
    }

    .requirement.met::before {
        content: "âœ“ ";
        font-weight: bold;
    }

    .password-toggle {
        position: absolute;
        right: 8px;
        top: 50%;
        transform: translateY(-50%);
        background: transparent;
        border: none;
        cursor: pointer;
        color: #999999;
        font-size: 12px;
        padding: 0;
        line-height: 1;
        transition: none;
        opacity: 0.6;
        z-index: 10;
        box-shadow: none;
        width: 16px;
        height: 16px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .password-toggle:hover,
    .password-toggle:focus,
    .password-toggle:active {
        background: transparent;
        color: #999999;
        outline: none;
        opacity: 0.6;
        box-shadow: none;
        transform: translateY(-50%);
    }

    .btn-reset {
        width: 100%;
        padding: 15px;
        background: linear-gradient(45deg, #2ecc71, #27ae60);
        color: white;
        border: none;
        border-radius: 12px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 1px;
        position: relative;
        overflow: hidden;
    }

    .btn-reset:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 25px rgba(46, 204, 113, 0.3);
    }

    .btn-reset:active {
        transform: translateY(0);
    }

    .btn-reset::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: left 0.5s;
    }

    .btn-reset:hover::before {
        left: 100%;
    }

    .password-strength {
        margin-top: 10px;
        font-size: 12px;
        color: #7f8c8d;
    }

    .strength-bar {
        height: 4px;
        background: #e1e8ed;
        border-radius: 2px;
        margin-top: 5px;
        overflow: hidden;
    }

    .strength-fill {
        height: 100%;
        width: 0%;
        transition: all 0.3s ease;
        border-radius: 2px;
    }

    .strength-weak { background: #e74c3c; }
    .strength-medium { background: #f39c12; }
    .strength-strong { background: #2ecc71; }

    .floating-shapes {
        position: absolute;
        width: 100%;
        height: 100%;
        overflow: hidden;
        pointer-events: none;
    }

    .shape {
        position: absolute;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 50%;
        animation: float 6s ease-in-out infinite;
    }

    .shape:nth-child(1) {
        width: 80px;
        height: 80px;
        top: 20%;
        left: 10%;
        animation-delay: 0s;
    }

    .shape:nth-child(2) {
        width: 60px;
        height: 60px;
        top: 60%;
        right: 10%;
        animation-delay: 2s;
    }

    .shape:nth-child(3) {
        width: 40px;
        height: 40px;
        bottom: 20%;
        left: 20%;
        animation-delay: 4s;
    }

    @keyframes float {
        0%, 100% { transform: translateY(0px) rotate(0deg); }
        50% { transform: translateY(-20px) rotate(180deg); }
    }

    .success-message {
        background: linear-gradient(45deg, #2ecc71, #27ae60);
        color: white;
        padding: 15px;
        border-radius: 10px;
        margin-bottom: 20px;
        text-align: center;
        font-weight: 600;
    }

    .error-message {
        background: linear-gradient(45deg, #e74c3c, #c0392b);
        color: white;
        padding: 15px;
        border-radius: 10px;
        margin-bottom: 20px;
        text-align: center;
        font-weight: 600;
    }
</style>

<div class="reset-password-container">
    <div class="floating-shapes">
        <div class="shape"></div>
        <div class="shape"></div>
        <div class="shape"></div>
    </div>
    
    <div class="reset-password-card">
        <div class="card-header">
            <h1>ðŸ”‘ Reset Password</h1>
            <p>Enter your new password below to complete the reset process.</p>
        </div>



        <form action="/reset-password" method="POST" class="needs-validation" novalidate>
    <input type="hidden" name="token" value="<%= token %>">
    <div class="form-group">
        <label for="password" class="form-label">New Password</label>
                <div class="password-field">
                    <input 
                        type="password" 
                        class="form-control" 
                        id="password" 
                        name="password" 
                        required 
                        placeholder="Enter your new password"
                        pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$"
                        title="Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one number, and one special character"
                        style="padding-right: 50px;"
                    >
                    <button type="button" class="password-toggle" onclick="togglePassword('password')" aria-label="Toggle password visibility">
                        <i class="fas fa-eye" id="toggleIcon1"></i>
                    </button>
                </div>
                <div class="password-strength" id="passwordStrength" style="margin-top: 10px; font-size: 12px; display: none;">
                    <div class="strength-bar">
                        <div class="strength-fill" id="strengthFill"></div>
                    </div>
                    <div class="strength-text" id="strengthText"></div>
                </div>
                <div class="password-requirements" style="margin-top: 8px; font-size: 11px; color: #7f8c8d;">
                    <div>Password must contain:</div>
                    <div id="reqLength" class="requirement">â€¢ At least 8 characters</div>
                    <div id="reqLower" class="requirement">â€¢ One lowercase letter</div>
                    <div id="reqUpper" class="requirement">â€¢ One uppercase letter</div>
                    <div id="reqNumber" class="requirement">â€¢ One number</div>
                    <div id="reqSpecial" class="requirement">â€¢ One special character (@$!%*?&)</div>
                </div>
            </div>

            <div class="form-group">
                <label for="confirmPassword" class="form-label">Confirm Password</label>
                <div class="password-field">
                    <input 
                        type="password" 
                        class="form-control" 
                        id="confirmPassword" 
                        name="confirmPassword" 
                        required 
                        placeholder="Confirm your new password"
                        minlength="6"
                        style="padding-right: 50px;"
                    >
                    <button type="button" class="password-toggle" onclick="togglePassword('confirmPassword')" aria-label="Toggle confirm password visibility">
                        <i class="fas fa-eye" id="toggleIcon2"></i>
                    </button>
                </div>
            </div>

            <button type="submit" class="btn-reset">
                Reset Password
            </button>
        </form>
    </div>
</div>

<script>
    function togglePassword(fieldId) {
        const passwordField = document.getElementById(fieldId);
        const toggleIcon = fieldId === 'password' ? document.getElementById('toggleIcon1') : document.getElementById('toggleIcon2');
        
        if (passwordField.type === 'password') {
            passwordField.type = 'text';
            toggleIcon.className = 'fas fa-eye-slash';
        } else {
            passwordField.type = 'password';
            toggleIcon.className = 'fas fa-eye';
        }
    }

    function checkPasswordStrength(password) {
        const requirements = {
            length: password.length >= 8,
            lowercase: /[a-z]/.test(password),
            uppercase: /[A-Z]/.test(password),
            number: /\d/.test(password),
            special: /[@$!%*?&]/.test(password)
        };

        // Update requirement indicators
        document.getElementById('reqLength').classList.toggle('met', requirements.length);
        document.getElementById('reqLower').classList.toggle('met', requirements.lowercase);
        document.getElementById('reqUpper').classList.toggle('met', requirements.uppercase);
        document.getElementById('reqNumber').classList.toggle('met', requirements.number);
        document.getElementById('reqSpecial').classList.toggle('met', requirements.special);

        // Calculate strength
        const metCount = Object.values(requirements).filter(Boolean).length;
        const strengthFill = document.getElementById('strengthFill');
        const strengthText = document.getElementById('strengthText');
        const passwordStrength = document.getElementById('passwordStrength');

        if (password.length === 0) {
            passwordStrength.style.display = 'none';
            return;
        }

        passwordStrength.style.display = 'block';

        if (metCount <= 2) {
            strengthFill.className = 'strength-fill weak';
            strengthText.className = 'strength-text weak';
            strengthText.textContent = 'Weak';
        } else if (metCount === 3) {
            strengthFill.className = 'strength-fill fair';
            strengthText.className = 'strength-text fair';
            strengthText.textContent = 'Fair';
        } else if (metCount === 4) {
            strengthFill.className = 'strength-fill good';
            strengthText.className = 'strength-text good';
            strengthText.textContent = 'Good';
        } else {
            strengthFill.className = 'strength-fill strong';
            strengthText.className = 'strength-text strong';
            strengthText.textContent = 'Strong';
        }
    }

    function checkPasswordMatch() {
        const password = document.getElementById('password');
        const confirmPassword = document.getElementById('confirmPassword');
        const submitBtn = document.querySelector('.btn-reset');

        if (confirmPassword.value && password.value !== confirmPassword.value) {
            confirmPassword.style.borderColor = '#e74c3c';
            submitBtn.disabled = true;
        } else {
            confirmPassword.style.borderColor = '#e1e8ed';
            submitBtn.disabled = false;
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
        const password = document.getElementById('password');
        const confirmPassword = document.getElementById('confirmPassword');
        const form = document.querySelector('form');
        const submitBtn = document.querySelector('.btn-reset');

        password.addEventListener('input', function() {
            checkPasswordStrength(this.value);
            checkPasswordMatch();
        });

        confirmPassword.addEventListener('input', checkPasswordMatch);

        form.addEventListener('submit', function() {
            submitBtn.innerHTML = 'Resetting...';
            submitBtn.disabled = true;
        });
    });
</script> 